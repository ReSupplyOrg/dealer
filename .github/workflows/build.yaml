# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run tests
        run: python backend/manage.py test

  versioning:
    permissions: write-all
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.latest_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Git Identity
        run: |
          git checkout main
          git fetch --all --tags
          git config --global user.email "antoniojosedonishung@gmail.com"
          git config --global user.name "Antonio Donis"
      - name: Changelog
        run: 'npx standard-version --message "[ci skip] chore(release): %s"'

      - name: Push changes
        run: git push --follow-tags --force origin main

      - id: latest_version
        name: Latest version
        run: python version.py >> $GITHUB_OUTPUT

  release-github:
    permissions: write-all
    needs:
      - versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{needs.versioning.outputs.version}}

  release-docker:
    permissions: write-all
    needs:
      - versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/ReSupplyOrg/dealer:latest,ghcr.io/ReSupplyOrg/dealer:${{needs.versioning.outputs.version}}
          labels: ${{ steps.meta.outputs.labels }}